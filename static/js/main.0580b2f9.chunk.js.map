{"version":3,"sources":["logo.svg","config/axios.js","component/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["axios","Axios","create","baseURL","Dashboard","useState","quest","on","setOn","subject_name","publication","class_no","chapter_no","chapter_name","question_type","questions","option1","option2","option3","option4","data","setData","dataUpload","setDataUpload","finalDataEntry","setFinalDataEntry","handleChange","e","target","name","value","toString","handleSubmit","event","preventDefault","handleClick","a","Object","keys","length","final","console","log","post","then","res","error","Swal","fire","icon","title","text","showConfirmButton","timer","setTimeout","window","location","reload","catch","err","handleImage","formData","FormData","append","files","response","type","path","loadData","className","src","origin","alt","map","Form","onSubmit","FloatingLabel","controlId","label","required","Select","onChange","Group","Label","Control","placeholder","as","rows","Button","onClick","Check","variant","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0580b2f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Axios from 'axios'\n\nconst axios=Axios.create({\n    // baseURL:'https://asm.taskmo.com/fse/61' \n    // baseURL:'http://localhost:8000'\n    baseURL:'https://nodeapi.taskmo.com' \n\n})\n\nexport default axios","import React, { useEffect } from \"react\";\nimport \"./Dashboard.css\";\nimport { Form, Button, FloatingLabel } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport Axios from \"../config/axios\";\nimport axios from \"axios\"\nimport Swal from 'sweetalert2'\n\n\nfunction Dashboard() {\n  const [quest, setQuestions] = useState([\"1\"]);\n  const [on, setOn] = useState(true);\n  const [data, setData] = useState({\n    subject_name: \"\",\n    publication: \"\",\n    class_no: \"\",\n    chapter_no: \"\",\n    chapter_name: \"\",\n    question_type: \"\",\n    questions: \"\",\n    option1: \"\",\n    option2: \"\",\n    option3: \"\",\n    option4: \"\",\n  });\n  const [dataUpload, setDataUpload] = useState({});\n  const [finalDataEntry, setFinalDataEntry] = useState({});\n\n  let {\n    subject_name,\n    publication,\n    class_no,\n    chapter_no,\n    chapter_name,\n    question_type,\n    questions,\n    option1,\n    option2,\n    option3,\n    option4,\n  } = data;\n\n  const handleChange = (e) => {\n    // console.log(e.target.value, \"e value\");\n    setData({ ...data, [e.target.name]: [e.target.value].toString() });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n  }\n  const handleClick = async (e) => {\n    try {\n\n      if (Object.keys(dataUpload).length > 0) {\n        const final = {...data}\n        final.option1 = dataUpload.option1;\n        final.option2 = dataUpload.option2;\n        final.option3 = dataUpload.option3;\n        final.option4 = dataUpload.option4;\n        setFinalDataEntry(final);\n        console.log(final,\"inside click\")\n        if(final.option1===dataUpload.option1 && final.option2===dataUpload.option2){\n          const addRow =await  Axios.post(\"/v1/dataEntry/questt/add\",finalDataEntry)\n          .then(res=> {\n            if(res.data.error){\n              Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'something went wrong while uploading!submit again!',\n              })\n              console.log(\"something went wrong while uploading, submit again\")\n            }else {\n              console.log(res.data,\"data added successfully\")\n              Swal.fire({\n                icon: 'success',\n                title: 'Your work has been saved',\n                showConfirmButton: false,\n                timer: 1500\n              })\n              setTimeout(function(){ window.location.reload() }, 2000);\n            }\n          \n  \n          })\n          .catch(err=>{\n            console.log(err)\n          })\n        }\n        \n      } else {\n        setFinalDataEntry(data);\n        const addRow =await  Axios.post(\"/v1/dataEntry/questt/add\",finalDataEntry)\n          .then(res=> {\n            if(res.data.error){\n              Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'something went wrong while uploading!submit again!',\n              })\n              console.log(\"something went wrong while uploading, submit again\")\n            }else {\n              Swal.fire({\n                icon: 'success',\n                title: 'Your work has been saved',\n                showConfirmButton: false,\n                timer: 1500\n              })\n              console.log(res.data,\"data added successfully\")\n              setTimeout(function(){ window.location.reload() }, 2000);\n            }\n          \n  \n          })\n          .catch(err=>{\n            console.log(err)\n          })\n      }\n\n     \n    } catch(err) {\n      console.log(err)\n    }\n  };\n\n  const handleImage = async (e) => {\n    try {\n      const formData = new FormData();\n\n      formData.append(\"option_image\", e.target.files[0]);\n      formData.append(\"type\", `${e.target.name}`);\n\n      // console.log(formData,\"val\")\n\n      setData({ ...data, [e.target.name]: [e.target.value].toString() });\n\n      // console.log(e.target.files[0], \"data value files\");\n      // console.log(e.target.name, \"data value name\");\n\n      const loadData = await axios\n        .post(\"https://isp.taskmo.in/quest/upload_option_image\", formData)\n        .then((response) => {\n          // console.log(response.data.path, \"data res\");\n          // console.log(response.data.type, \"data res\");\n          setDataUpload({\n            ...dataUpload,\n            [response.data.type]: [response.data.path].toString(),\n          });\n        })\n        .catch((err) => {\n          console.log(err, \"error\");\n        });\n      return loadData;\n    } catch (err) {\n      console.log(err, \"error\");\n    }\n  };\n  const handleClick1 = () => {\n    setOn(true);\n    setData({ ...data, option1: \"\", option2: \"\", option3: \"\", option4: \"\" });\n  };\n  const handleClick2 = () => {\n    setOn(false);\n    setData({ ...data, option1: \"\", option2: \"\", option3: \"\", option4: \"\" });\n  };\n\n  return (\n    <div className=\"dashboard_outer\">\n      <div className=\"header\">\n        <img\n          src={window.location.origin + \"/images/logo/tmlogo.svg\"}\n          alt=\"taskmo-logo\"\n          className=\"logo_taskmo\"\n        />\n      </div>\n      <div className=\"body\">\n        {/* <h1 className=\"form_header\">Questt Form</h1> */}\n        {quest.map(() => (\n          <Form className=\"dashboard\" onSubmit={handleSubmit}>\n            <h1 className=\"form_header\">Questt Form</h1>\n            <FloatingLabel\n              className=\"mb-3\"\n              controlId=\"floatingSelectGrid\"\n              label=\"Subject\"\n              required\n            >\n              <Form.Select\n                className=\"my-className\"\n                aria-label=\"Floating label select example\"\n                name=\"subject_name\"\n                value={subject_name}\n                onChange={handleChange}\n                required\n              >\n                <option value=\"\"> Select option</option>\n                <option value=\"English\">English</option>\n                <option value=\"Kannada\">Kannada</option>\n                <option value=\"Hindi\">Hindi</option>\n                <option value=\"EVS\">EVS</option>\n                <option value=\"Science\">Science</option>\n                <option value=\"Maths\">Maths</option>\n              </Form.Select>\n            </FloatingLabel>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Publication</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"publication\"\n                value={publication}\n                onChange={handleChange}\n                placeholder=\"Enter Publication\"\n                required\n              />\n            </Form.Group>\n            <FloatingLabel\n              className=\"mb-3\"\n              controlId=\"floatingSelectGrid\"\n              label=\"class\"\n              required\n            >\n              <Form.Select\n                aria-label=\"Floating label select example\"\n                name=\"class_no\"\n                value={class_no}\n                onChange={handleChange}\n                required\n              >\n                <option value=\"\">Select option</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n              </Form.Select>\n            </FloatingLabel>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Chapter Number</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Desired Chapter No\"\n                name=\"chapter_no\"\n                value={chapter_no}\n                onChange={handleChange}\n                required\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Chapter Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Desired Chapter Name\"\n                name=\"chapter_name\"\n                value={chapter_name}\n                onChange={handleChange}\n                required\n              />\n            </Form.Group>\n            <FloatingLabel\n              className=\"mb-3\"\n              controlId=\"floatingSelectGrid\"\n              label=\"Type of question\"\n              required\n            >\n              <Form.Select\n                aria-label=\"Floating label select example\"\n                name=\"question_type\"\n                value={question_type}\n                onChange={handleChange}\n                required\n              >\n                <option value=\"\">Select option</option>\n                <option value=\"MCQ with 1 correct option\">\n                  MCQ with 1 correct option\n                </option>\n                <option value=\"MCQ with multiple correct options\">\n                  MCQ with multiple correct options\n                </option>\n                <option value=\"True - False\">True - False</option>\n                <option value=\"One word / Fill up\">One word / Fill up</option>\n                <option value=\"Subjective\">Subjective</option>\n              </Form.Select>\n            </FloatingLabel>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n            >\n              <Form.Label>Enter question</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                name=\"questions\"\n                value={questions}\n                onChange={handleChange}\n                required\n              />\n            </Form.Group>\n            <div className=\"switch_button\">\n              <Button\n                className={on ? \"file_button\" : \"text_button\"}\n                onClick={() => handleClick1()}\n              >\n                Text\n              </Button>\n              <Button\n                className={on ? \"text_button\" : \"file_button\"}\n                onClick={() => handleClick2()}\n              >\n                File Upload\n              </Button>\n            </div>\n            {on ? (\n              <Form.Group controlId=\"formTextMultiple\" className=\"mb-3\">\n                <div className=\"row_dash\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Option1\"\n                    name=\"option1\"\n                    value={option1}\n                    onChange={handleChange}\n                    required\n                  />\n                </div>\n                <div className=\"row_dash\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Option2\"\n                    name=\"option2\"\n                    value={option2}\n                    onChange={handleChange}\n                    required\n                  />\n                </div>\n                <div className=\"row_dash\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Option3\"\n                    name=\"option3\"\n                    value={option3}\n                    onChange={handleChange}\n                    \n                  />\n                </div>\n                <div className=\"row_dash\">\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Option4\"\n                    name=\"option4\"\n                    value={option4}\n                    onChange={handleChange}\n                    \n                  />\n                </div>\n                \n              </Form.Group>\n            ) : (\n              <Form.Group controlId=\"formFileMultiple\" className=\"mb-3\">\n                <Form.Label className=\"mt-3\" required>\n                  Option1\n                </Form.Label>\n                <Form.Check>\n                  <Form.Control\n                    type=\"file\"\n                    name=\"option1\"\n                    value={option1}\n                    onChange={handleImage}\n                    required\n                  />\n                  \n                </Form.Check>\n                <Form.Label className=\"mt-3\" required>\n                  Option2\n                </Form.Label>\n                <Form.Check>\n                  <Form.Control\n                    type=\"file\"\n                    name=\"option2\"\n                    value={option2}\n                    onChange={handleImage}\n                    required\n                  />\n                </Form.Check>\n                <Form.Label className=\"mt-3\" >\n                  Option3\n                </Form.Label>\n                <Form.Check>\n                  <Form.Control\n                    type=\"file\"\n                    name=\"option3\"\n                    value={option3}\n                    onChange={handleImage}\n                    \n                  />\n                </Form.Check>\n                <Form.Label className=\"mt-3\" >\n                  Option4\n                </Form.Label>\n                <Form.Check>\n                  <Form.Control\n                    type=\"file\"\n                    name=\"option4\"\n                    value={option4}\n                    onChange={handleImage}\n                    \n                  />\n                </Form.Check>\n                \n              </Form.Group>\n            )}\n            \n            <div className=\"add_button\">\n              <Button\n                className=\"button_add\"\n                variant=\"secondary\"\n                type=\"submit\"\n                onClick={() => handleClick()}\n                \n              >\n                <img\n                  src={window.location.origin + \"/images/add.svg\"}\n                  alt=\"taskmo-add\"\n                  className=\"add\"\n                />\n                <p className=\"taskmo_p1\">Add question</p>\n              </Button>\n            </div>\n          </Form>\n        ))}\n        <div className=\"buttons\">\n          <Button\n            className=\"button_save\"\n            variant=\"primary\"\n            type=\"Download\"\n            onClick={() => {\n              window.location.reload();\n            }}\n          >\n            Download\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n\n","import logo from './logo.svg';\nimport './App.css';\nimport Dashboard from \"./component/Dashboard\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}